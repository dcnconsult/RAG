version: '3.8'

services:
  # Single container with PostgreSQL + FastAPI + Frontend (Production)
  rag_app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: rag_app
    restart: unless-stopped
    ports:
      - "5432:5432"  # PostgreSQL (for direct access if needed)
      - "8000:8000"  # FastAPI API (for direct access if needed)
      - "80:80"      # Frontend (nginx) - Main access point
    environment:
      # Application Configuration
      - ENVIRONMENT=production
      - DEBUG=false
      - PROJECT_NAME=RAG Explorer
      - VERSION=1.0.0
      
      # Security Configuration
      - SECRET_KEY=your-secret-key-change-in-production-12345678901234567890
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      
      # Database Configuration
      - DATABASE_URL=postgresql://rag_user:rag_password@localhost:5432/rag_db
      - POSTGRES_DB=rag_db
      - POSTGRES_USER=rag_user
      - POSTGRES_PASSWORD=rag_password
      
      # Redis Configuration (optional for MVP)
      - REDIS_URL=redis://localhost:6379
      
      # API Configuration
      - API_V1_STR=/api/v1
      - CORS_ORIGINS=["http://localhost", "http://localhost:3000", "http://localhost:80"]
      
      # External API Keys (set these in production)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      
      # File Upload Configuration
      - MAX_FILE_SIZE=10485760  # 10MB
      - ALLOWED_FILE_TYPES=pdf,doc,docx,txt,md
      
      # Vector Search Configuration
      - VECTOR_DIMENSION=1536
      - SIMILARITY_THRESHOLD=0.7
      - MAX_RESULTS=10
    volumes:
      - rag_data:/var/lib/postgresql/data
      - rag_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "rag_user", "-d", "rag_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  rag_data:
    driver: local
  rag_uploads:
    driver: local
